openapi: 3.0.0
info:
  version: '1.0'
  title: FUSIION-gestion-competences
servers:
  - url: '{path}'
    variables:
      path:
        enum:
          - ''
          - /fusiion
        default: ''
tags:
  - name: Authentication
  - name: Competence
  - name: Collaborateur
  - name: Tag
  - name: ProfilGaming
  - name: Statistique

paths:
  /competences:
    get:
      tags:
        - Competence
      summary: Retourne une liste des compétences
      parameters:
        - name: like
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Competence
      summary: Permet de créer une nouvelle compétence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competence'
      responses:
        '200':
          description: Successful response
        '403':
          description: Access Denied exception
        '401':
          description: Unauthorized exception
        '500':
          description: Internal server error
  /competences/{akCompetence}:
    get:
      tags:
        - Competence
      summary: Retourne les details d'une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    put:
      tags:
        - Competence
      summary: Modifie une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competence'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    delete:
      tags:
        - Competence
      summary: supprime une competence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '404':
          description: Not Found exception
        '500':
          description: Internal server error

  /competences/{akCompetence}/apprendre/collaborateur/{akCollaborateur}:
    get:
      tags:
        - Competence
        - Collaborateur
      summary: L'envie d'un collab à progresser sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: number
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Competence
        - Collaborateur
      summary: Permet de creer l'envie d'un collab à progresser sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Apprendre'
      responses:
        '200':
          description: Successful response
        '403':
          description: Access Denied exception
        '401':
          description: Unauthorized exception
        '500':
          description: Internal server error
    put:
      tags:
        - Competence
        - Collaborateur
      summary:  Permet de modifier l'envie d'un collab à progresser sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Apprendre'
      responses:
        '200':
          description: Successful response
        '403':
          description: Access Denied exception
        '401':
          description: Unauthorized exception
        '500':
          description: Internal server error

  /competences/{akCompetence}/interet/collaborateur/{akCollaborateur}:
    get:
      tags:
        - Competence
        - Collaborateur
      summary: L'interet d'un collab sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: number
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Competence
        - Collaborateur
      summary: Permet de creer l'interet d'un collab sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interet'
      responses:
        '200':
          description: Successful response
        '403':
          description: Access Denied exception
        '401':
          description: Unauthorized exception
        '500':
          description: Internal server error
    put:
      tags:
        - Competence
        - Collaborateur
      summary:  Permet de modifier l'interet d'un collab à progresser sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interet'
      responses:
        '200':
          description: Successful response
        '403':
          description: Access Denied exception
        '401':
          description: Unauthorized exception
        '500':
          description: Internal server error
  /competences/{akCompetence}/seniorite/collaborateur/{akCollaborateur}:
    get:
      tags:
        - Competence
        - Collaborateur
      summary: Retourne la seniorite d'un collab sur une compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: number
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /competences/testallrelation:
    get:
      tags:
        - Competence
      summary: Retourne une toutes les relations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /competences/collaborateur/{akCollaborateur}:
    get:
      tags:
        - Competence
        - Collaborateur
      summary: Retourne la liste de competence d'un collaborateurs
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Competence
        - Collaborateur
      summary: Permet d'associer une competence à un collaborateur
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreationNouvelleRelation'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '404':
          description: Not Found exception
        '500':
          description: Internal server error
  /competences/{akCompetence}/tags:
    get:
      tags:
        - Tag
        - Competence
      summary: Retourne les tags liées à une competence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /collaborateurs:
    get:
      tags:
        - Collaborateur
      summary: Retourne la liste des collaborateurs
      parameters:
        - name: like
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /collaborateurs/{akCollaborateur}:
    get:
      tags:
        - Collaborateur
      summary: Retourne les details d'un collaborateur
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
        - name: like
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborateur'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /collaborateurs/competence:
    get:
      tags:
        - Competence
        - Collaborateur
      summary: Retourne une liste de collaborateurs
      parameters:
        - name: competence
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /collaborateurs/competences:
    post:
      tags:
        - Competence
        - Collaborateur
      summary: retourne une liste de collaborateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechercherParCompetences'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /collaborateurs/{akCollaborateur}/picture:
    get:
      tags:
        - Collaborateur
      summary: Retourne les photos d'un collaborateur
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
        - name: size
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Collaborateur
      summary: Modifie l'image du collaborateur
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /login:
    post:
      tags:
        - Authentication
      summary: Retourne un token d'authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLogin'
        '500':
          description: Internal server error
  /utilisateurs/{akCollaborateur}:
    get:
      tags:
        - Authentication
      summary: Retourne l'utilisateur et ses roles
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    put:
      tags:
        - Authentication
      summary: Modifie l'utilisateur et ses roles
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilisateur'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /tags:
    get:
      tags:
        - Tag
      summary: Retourne une liste des tags
      parameters:
        - name: like
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Tag
      summary: Permet de créer un nouveau tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /tags/{akTag}:
    get:
      tags:
        - Tag
      summary: Retourne les details d'un tag
      parameters:
        - name: akTag
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    put:
      tags:
        - Tag
      summary: modifie un tag
      parameters:
        - name: akTag
          in: path
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    delete:
      tags:
        - Tag
      summary: supprime un tag
      parameters:
        - name: akTag
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /tags/competences/{akCompetence}:
    post:
      tags:
        - Tag
        - Competence
      summary: Permet de créer une nouvelle relation entre tag et compétence
      parameters:
        - name: akCompetence
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /tags/{akTag}/competences:
    get:
      tags:
        - Tag
        - Competence
      summary: Retourne les compétences liées à un tag
      parameters:
        - name: akTag
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competence'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
  /temporaires:
    post:
      tags:
        - Authentication
      summary: Créer un compte temporaire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompteTemporaire'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '403':
          description: AccessDeniedException
        '409':
          description: ExisteException
        '500':
          description: Internal server error

  /temporaires/{akCollaborateur}:
    put:
      tags:
        - Authentication
      summary: Modifier le mot de passe du compte temporaire
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompteTemporaire'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error

  /temporaires/{akCollaborateur}/mdp:
    post:
      tags:
        - Authentication
      summary: Enregistre une demande de modification de mot de passe
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompteTemporaire'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error

  /temporaires/mdp/{uid}:
    get:
      tags:
        - Authentication
      summary: Vérifie si une demande de modif mot de passe est en cours
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompteTemporaire'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error

  /profilGaming:
    get:
      tags:
        - ProfilGaming
      summary: recupere tous les profils gaming

      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfilGaming'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '500':
          description: Internal server error
  /profilGaming/{akCollaborateur}:
    get:
      tags:
        - ProfilGaming
      summary: recupere un profil selon un ak
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilGaming'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
    put:
      tags:
        - ProfilGaming
      summary: modifier un profil selon un ak
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModificationProfil'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilGaming'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
  /profilGaming/{akCollaborateur}/succes:
    get:
      tags:
        - ProfilGaming
      summary: recupere les succes selon un ak
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Succes'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
  /profilGaming/{akCollaborateur}/avatar:
    get:
      tags:
        - ProfilGaming
      summary: recupere un avatar selon un ak
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
    put:
      tags:
        - ProfilGaming
      summary: uploader une image pour un profil gaming
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelImage'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilGaming'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
  /statistiques/{akStatistique}:
    get:
      tags:
        - Statistique
      summary: recupere un avatar selon un ak
      parameters:
        - name: akStatistique
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Statistique'
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '500':
          description: Internal server error
  /statistiques/:
    post:
      tags:
        - Statistique
      summary: Demande une actualisation des statistiques
      responses:
        '201':
          description: Successful response
        '401':
          description: Unauthorized
        '403':
          description: AccessDeniedException
        '500':
          description: Internal server error
  /objectifs:
    get:
      tags:
        - Competence
      summary: Retourne la liste des objectifs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objectif'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
    post:
      tags:
        - Competence
      summary: Permet de créer une nouveau objectif
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectifJSON'
      responses:
        '200':
          description: Successful response
        '403':
          description: Access Denied exception
        '401':
          description: Unauthorized exception
        '500':
          description: Internal server error
  /objectifs/{akObjectif}:
    get:
      tags:
        - Competence
      summary: Retourne le détail d'un objectif
      parameters:
        - name: akObjectif
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objectif'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
  /objectifs/{akObjectif}/relations:
    get:
      tags:
        - Competence
      summary: Retourne la liste des relations "doitEtreEvalue" d'un objectif
      parameters:
        - name: akObjectif
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectifDoitEtreEvalue'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
  /collaborateurs/{akCollaborateur}/objectifs:
    get:
      tags:
        - Competence
      summary: Retourne la liste des objectifs valide ou non par le collaborateur
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectifRetourJSON'
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '404':
          description: NotFoundException
        '500':
          description: Internal server error
    post:
      tags:
        - Competence
      summary: Permet d'attribuer une liste d'objectifs à un collaborateur
      parameters:
        - name: akCollaborateur
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized exception
        '403':
          description: Access Denied exception
        '500':
          description: Internal server error
components:
  securitySchemes:
    JWT:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    ResponseLogin:
      type: object
      properties:
        username:
          type: string
        emailSII:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          type: array
          items:
            type: string
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Utilisateur:
      type: object
      properties:
        akCollaborateur:
          type: string
        roles:
          type: array
          items:
            type: string
    CompteTemporaire:
      type: object
      properties:
        akCollaborateur:
          type: string
        username:
          type: string
        password:
          type: string
        uid:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        roles:
          type: array
          items:
            type: string

    Collaborateur:
      type: object
      properties:
        nom:
          type: string
        prenom:
          type: string
        akCollaborateur:
          type: string
    Competence:
      type: object
      properties:
        nom:
          type: string
        description:
          type: string
        akCompetence:
          type: string
    Apprendre:
      type: object
      properties:
        Competence:
          type: object
        Collaborateur:
          type: object
        isMentionApprendre:
          type: string
    Interet:
      type: object
      properties:
        Competence:
          type: object
        Collaborateur:
          type: object
        isMentionInteret:
          type: string
    Tag:
      type: object
      properties:
        nom:
          type: string
        description:
          type: string
        akTag:
          type: string
    CreationNouvelleRelation:
      type: object
      properties:
        akCompetence:
          type: string
        notation:
          type: integer
    RechercherParCompetences:
      type: array
      items:
        type: string
    Image:
      type: object
      properties:
        image:
          type: string
    ProfilGaming:
      type: object
      properties:
        akCollaborateur:
          type: string
        pseudo:
          type: string
        exp:
          type: number
        image:
          type: string
    Avatar:
      type: object
      properties:
        akCollaborateur:
          type: string
        image:
          type: string
    ModificationProfil:
      type: object
      properties:
        pseudo:
          type: string
    ModelImage:
      type: object
      properties:
        image:
          type: string
        type:
          type: string
    Succes:
      type: array
      items:
        type: object
        properties:
          nom:
            type: string
          description:
            type: string
          objectif:
            type: number
          enCours:
            type: number
          dateValide:
            type: string
          image:
            type: string
          gain:
            type: number
    Statistique:
      type: object
      properties:
        nomStatistique:
          type: string
        akStatistique:
          type: string
        date:
          type: string
        donnees:
          type: array
          items:
            $ref: '#/components/schemas/Donnee'
    Donnee:
      type: object
      properties:
        nomDonnee:
          type: string
        akDonnee:
          type: string
        valeurs:
          type: array
          items:
            type: object
    Objectif:
      type: object
      properties:
        akObjectif:
          type: string
        nom:
          type: string
        description:
          type: string
        badge:
          type: string
    Notation:
      type: object
      properties:
        nomCompetence:
          type: string
        note:
          type: number
    ObjectifJSON:
      type: object
      properties:
        akObjectif:
          type: string
        nom:
          type: string
        description:
          type: string
        badge:
          type: string
        type:
          type: string
        competences:
          type : array
          items:
            $ref: '#/components/schemas/Notation'
    ObjectifDoitEtreEvalue:
      type: object
      properties:
        akObjectif:
          type: string
        notation:
          type: number
        akCompetence:
          type: string
    ObjectifRetourJSON:
      type: object
      properties:
        akObjectif:
          type: string
        nom:
          type: string
        description:
          type: string
        badge:
          type: string
        valide:
          type: boolean