package fr.sii.atlantique.fusiion.fusiion_gestion_competences;

import static java.util.Collections.singletonList;
import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.mockito.BDDMockito.given;
import static org.mockito.BDDMockito.then;
import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.verify;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.springframework.amqp.AmqpException;
import org.springframework.amqp.core.FanoutExchange;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.AAtteindre;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.Collaborateur;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.Competence;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.CompetentSur;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.MentionApprendreSur;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.MentionInteretPour;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.Objectif;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.SenioriteSur;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.Tag;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.domain.TagueSur;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.exceptions.CompetenceExistanteException;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.exceptions.DefautException;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.exceptions.NotFoundException;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.exceptions.ObjectifExistantException;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.exceptions.ObjectifJSONException;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.exceptions.TagExistantException;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.ObjectifRetourJSON;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.request_body.CompetentSurJSON;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.request_body.ObjectifJSON;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.request_body.TagueSurJSON;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.response_body.CompetencesParCollaborateurJSON;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.response_body.ObjectifDoitEtreEvalue;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.statistiques.DonneeStatistique;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.models.statistiques.Statistique;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.AAtteindreRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.CollaborateurRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.CompetenceRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.CompetentSurRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.DoitEtreEvalueRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.MentionApprendreSurRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.MentionInteretPourRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.ObjectifRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.SenioriteSurRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.TagRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.repositories.TagueSurRepository;
import fr.sii.atlantique.fusiion.fusiion_gestion_competences.services.CompetenceService;

@RunWith(SpringJUnit4ClassRunner.class)
public class TestCompetenceService {

	@Mock
	private CompetenceRepository competenceRepository;

	@Mock
	private RabbitTemplate rabbitTemplate;

	@Mock
	private TopicExchange topicExchange;
	
	@Mock
	private FanoutExchange fanoutExchange;

	@Mock
	private TagRepository tagRepository;

	@Mock
	private TagueSurRepository tagueSurRepository;

	@Mock
	private CollaborateurRepository collaborateurRepository;

	@Mock
	private ObjectifRepository objectifRepository;

	@Mock
	private DoitEtreEvalueRepository doitEtreEvalueRepository;

	@Mock
	private AAtteindreRepository aAtteindreRepository;

	@Mock
	private CompetentSurRepository competentSurRepository;

	@Mock
	private SenioriteSurRepository senioriteSurRepository;

	@Mock
	private MentionApprendreSurRepository mentionApprendreSurRepository;

	@Mock
	private MentionInteretPourRepository mentionInteretPourRepository;

	@InjectMocks
	private CompetenceService competenceService;

	@Test
	public void doitRetournerListeCompetences() throws Exception {
		Competence cmp = new Competence("Test_ak", "test", "test_desc", true, false);

		List<Competence> allCmp = singletonList(cmp);

		given(competenceRepository.findAll()).willReturn(allCmp);

		// when
		List<Competence> result = competenceService.getAllCompetence();

		// then
		then(competenceRepository).should().findAll();
		assertThat(result).isEqualTo(singletonList(cmp));
	}

	@Test
	public void doitRetournerCompetence() throws Exception {
		Optional<Competence> cmp = Optional.ofNullable(new Competence("Test_ak", "test", "test_desc", true, false));

		given(competenceRepository.findOneByAkCompetence(cmp.get().getAkCompetence())).willReturn(cmp);

		// when
		Competence result = competenceService.getDetailCompetence(cmp.get().getAkCompetence());

		// then
		then(competenceRepository).should().findOneByAkCompetence(cmp.get().getAkCompetence());
		assertThat(result).isEqualTo(cmp.get());
	}

	@Test
	public void doitRetournerListeCollaborateurs() throws Exception {
		Collaborateur collab = new Collaborateur("testCollab");

		List<Collaborateur> allCollab = singletonList(collab);

		given(collaborateurRepository.findAll()).willReturn(allCollab);

		// when
		List<Collaborateur> result = competenceService.getAllCollaborateur();

		// then
		then(collaborateurRepository).should().findAll();
		assertThat(result).isEqualTo(singletonList(collab));
	}

	@Test
	public void doitAjouterCompetence()  throws CompetenceExistanteException, AmqpException, JsonProcessingException{
		Competence cmp = new Competence("ak_test", "test", "test_desc", true, false);

		given(competenceRepository.save(cmp)).willReturn(cmp);

		Competence result = competenceService.createCompetence(cmp);

		then(competenceRepository).should().save(cmp);

		assertEquals(result, cmp);
	}

	@Test(expected = CompetenceExistanteException.class)
	public void doitAjouterCompetence_CompetenceExistanteException()  throws CompetenceExistanteException, AmqpException, JsonProcessingException{
		Optional<Competence> cmp = Optional.ofNullable(new Competence("ak_test", "test", "test_desc", true, false));

		given(competenceRepository.findOneByAkCompetence(cmp.get().getAkCompetence())).willReturn(cmp);
		competenceService.createCompetence(cmp.get());
	}

	@Test
	public void doitModifierCompetence() throws NotFoundException {
		Optional<Competence> cmp = Optional.ofNullable(new Competence("ak_test", "test", "test_desc", true, false));
		Competence cmp2 = new Competence("ak_test", "testmodif", "test_desc", true, false);

		given(competenceRepository.findOneByAkCompetence("ak_test")).willReturn(cmp);
		given(competenceRepository.save(cmp2)).willReturn(cmp2);

		// when

		Competence result = competenceService.modifierCompetence(cmp2);
		// then
		then(competenceRepository).should().save(cmp2);
		assertEquals(result, cmp2);
	}

	@Test
	public void doitAjouterTag() throws TagExistantException {
		Tag tag = new Tag("ak_test", "nom", "desc");

		given(tagRepository.save(tag)).willReturn(tag);

		Tag result = competenceService.createTag(tag);

		then(tagRepository).should().save(tag);
		assertEquals(tag, result);
	}

	@Test(expected = TagExistantException.class)
	public void doitAjouterTag_TagExistantException() throws TagExistantException {
		Tag tag = new Tag("ak_nom", "nom", "desc");

		given(tagRepository.findOneByAkTag(tag.getAkTag())).willReturn(tag);

		competenceService.createTag(tag);
	}

	@Test
	public void doitModifierTag() throws NotFoundException {
		Tag tag = new Tag("ak_test", "nom", "desc");
		Tag tag2 = new Tag("ak_test", "nom2", "desc");

		given(tagRepository.findOneByAkTag("ak_test")).willReturn(tag);
		given(tagRepository.save(tag2)).willReturn(tag2);

		// when
		Tag result = competenceService.modifierTag(tag2);
		// then
		then(tagRepository).should().save(tag2);
		assertEquals(result, result);
	}

	@Test
	public void doitSupprimerTag() throws NotFoundException {
		Tag tag = new Tag("ak_test", "nom", "desc");
		List<Tag> allTag = new ArrayList<Tag>();
		//given
		doNothing().when(tagRepository).delete(tag);
		given(tagRepository.findOneByAkTag("ak_test")).willReturn(tag);
		given(tagRepository.findAll()).willReturn(allTag);
		// when
		Tag result = competenceService.supprimerTag("ak_test");
		// then
		then(tagRepository).should().delete(tag);
		assertEquals(result, result);
	}

	@Test
	public void doisRetournerAllTags() {
		Tag tag = new Tag("ak_tag", "nom", "desc");

		List<Tag> allTag = singletonList(tag);

		//given
		given(tagRepository.findAll()).willReturn(allTag);
		//when
		List<Tag> result = competenceService.getAllTag();
		//then
		then(tagRepository).should().findAll();
		assertEquals(allTag, result);
	}

	@Test
	public void doisRetournerTag() {
		String ak = "ak_tag";
		Tag tag = new Tag("ak_tag", "nom", "desc");

		//given
		given(tagRepository.findOneByAkTag(ak)).willReturn(tag);
		//when
		Tag result = competenceService.findByAkTag(ak);
		//then
		then(tagRepository).should().findOneByAkTag(ak);
		assertEquals(tag, result);
	}

	@Test
	public void doisRetournerCollabs() {
		String ak = "ak_test";
		Collaborateur collab = new Collaborateur("ak_collab");

		List<Collaborateur> allCollab = singletonList(collab);

		//given
		given(collaborateurRepository.rechercherParCompetence(ak)).willReturn(allCollab);
		//when
		List<Collaborateur> result = competenceService.rechercherParCompetence(ak);
		//then
		then(collaborateurRepository).should().rechercherParCompetence(ak);
		assertEquals(allCollab, result);
	}

	@Test
	public void doisRetournerCompetence() {
		String ak = "ak_";
		Competence cmp = new Competence("ak_test", "test", "desc", true, false);
		List<Competence> allCmp = singletonList(cmp);
		//given
		given(competenceRepository.findLikeCompetence("[aàáâãäå]"+"k_"+".*")).willReturn(allCmp);
		//when
		List<Competence> result = competenceService.findLikeCompetence(ak,2);
		//then
		then(competenceRepository).should().findLikeCompetence("[aàáâãäå]"+"k_"+".*");
		assertEquals(allCmp, result);
	}

	@Test
	public void ajouterCompetentSur() throws NotFoundException, AmqpException, JsonProcessingException{
		LocalDateTime date = LocalDateTime.now();
		int notation = 5;
		Optional<Competence> competence = Optional.ofNullable(new Competence("testak", "test", "test_desc", true, false));
		Collaborateur collaborateur = new Collaborateur("testcollab");

		CompetentSurJSON competentSurJson = new CompetentSurJSON(competence.get().getAkCompetence(), notation, date);
		CompetentSur competentSur = new CompetentSur(collaborateur, competence.get(), date, notation, false);

		//competence existante
		given(competenceRepository.findOneByAkCompetence("testak")).willReturn(competence);

		//collaborateur non existant
		given(collaborateurRepository.findOneByAkCollaborateur("testcollab")).willReturn(Optional.ofNullable(null));

		//premiere evaluation sur cette competence
		given(senioriteSurRepository.findByAkCollaborateurAndAkCompetence("testcollab", competentSurJson.getAkCompetence())).willReturn(new ArrayList<>());

		CompetentSur result = competenceService.ajouterCompetentSur(collaborateur.getAkCollaborateur(), competentSurJson);
		//fixe de la date
		result.setDate(date);

		///////tests des résultats attendus/////////
		//renvoi la relation competent Sur crée
		assertEquals(competentSur, result);
		//crée la relation competentSur
		verify(competentSurRepository).save(Mockito.any(CompetentSur.class));
		//crée le collaborateur
		verify(collaborateurRepository).save(Mockito.any(Collaborateur.class));
		//crée la séniorité
		verify(senioriteSurRepository).save(Mockito.any(SenioriteSur.class));
	}

	@Test(expected = NotFoundException.class)
	public void ajouterCompetentSur_NotFoundException() throws NotFoundException, AmqpException, JsonProcessingException {

		Collaborateur collab = new Collaborateur("testcollab");
		CompetentSurJSON cmpJSON = new CompetentSurJSON("test_akCompetence", 5, null);
		given(competenceRepository.findOneByAkCompetence("test_akcompetence")).willReturn(null);

		competenceService.ajouterCompetentSur(collab.getAkCollaborateur(), cmpJSON);
	}

	@Test
	public void getAllRelationTest() {
		CompetentSur competentSur = new CompetentSur();
		List<CompetentSur> list = singletonList(competentSur);
		given(competentSurRepository.findAll()).willReturn(list);

		assertTrue(competenceService.getAllRelation().equals(list));
	}

	@Test
	public void competenceUnCollaborateur() {
		competenceService.competencesUnCollaborateur("email@sii.fr");
		Collaborateur collab = new Collaborateur("email@sii.fr");
		List<CompetentSur> listeRelation = new ArrayList<CompetentSur>();

		Competence cmp1 = new Competence("TEST1","alpha","",false,true);
		Competence cmp2 = new Competence("TEST2","beta","",true,false);
		Competence cmp3 = new Competence("TEST0","gamma","",false,true);

		listeRelation.add(new CompetentSur(collab,
				cmp1,
				LocalDateTime.now(),5,true));
		listeRelation.add(new CompetentSur(collab,
				cmp2,
				LocalDateTime.now().plusDays(1),2,true));
		listeRelation.add(new CompetentSur(collab,
				cmp1,
				LocalDateTime.now().plusDays(2),1,true));
		listeRelation.add(new CompetentSur(collab,
				cmp3,
				LocalDateTime.now().plusDays(3),5,true));

		List<CompetencesParCollaborateurJSON> resultats = new ArrayList<CompetencesParCollaborateurJSON>();
		resultats.add(new CompetencesParCollaborateurJSON(listeRelation.get(2)));
		resultats.add(new CompetencesParCollaborateurJSON(listeRelation.get(1)));
		resultats.add(new CompetencesParCollaborateurJSON(listeRelation.get(3)));
		given(competentSurRepository.findByAkCollaborateur("email@sii.fr"))
		.willReturn(listeRelation.stream());
		System.out.println(resultats);
		System.out.println(competenceService.competencesUnCollaborateur("email@sii.fr"));
		given(competentSurRepository.findByAkCollaborateur("email@sii.fr"))
		.willReturn(listeRelation.stream());



		assertTrue(competenceService.competencesUnCollaborateur("email@sii.fr")
				.equals(resultats));
	}

	@Test
	public void senioriteSemaine() throws NotFoundException {
		String akCollaborateur = "spineau@sii.fr";
		String akCompetence = "Prolog";
		Collaborateur collaborateur = new Collaborateur(akCollaborateur);
		Competence competence = new Competence(akCompetence, akCompetence, "", false, false);
		LocalDateTime heureCourante = LocalDateTime.now();

		SenioriteSur senioriteSur = new SenioriteSur(collaborateur,competence,heureCourante);
		List<SenioriteSur> list = singletonList(senioriteSur);
		given(senioriteSurRepository.findByAkCollaborateurAndAkCompetence(akCollaborateur, akCompetence)).willReturn(list);
		Long result = new Long(0);
		assertTrue(competenceService.senioriteSemaine(akCollaborateur, akCompetence)
				.equals(result));
	}

	@Test(expected = NotFoundException.class)
	public void senioriteSemaine_NotFoundException() throws NotFoundException {
		String akCollaborateur = "spineau@sii.fr";
		String akCompetence = "Prolog";
		competenceService.senioriteSemaine(akCollaborateur, akCompetence);
	}

	@Test
	public void tagsParNom() {
		String nomRecherche = "gl";
		List<Tag> resultAttendu = singletonList(new Tag("google","google","competence de google"));
		given(tagRepository.findByNom(".*"+nomRecherche+".*")).willReturn(resultAttendu);

		List<Tag> resultObtenu = competenceService.tagsParNom(nomRecherche, 2);
		System.out.println(resultAttendu.toString());
		System.out.println(resultObtenu.toString());

		assertEquals(resultAttendu, resultObtenu);
	}

	@Test
	public void ajouterTagueSur() throws NotFoundException {
		// given
		Tag tag = new Tag("aktest", "dfsqfsd", "sqfsd");
		Optional<Competence> cmp = Optional.ofNullable(new Competence("TestAk", "test", "test_desc", true, false));
		TagueSurJSON tagSur = new TagueSurJSON("aktest");
		TagueSur ts = new TagueSur(tag, cmp.get());

		given(competenceRepository.findOneByAkCompetence("TestAk")).willReturn(cmp);
		given(tagRepository.findOneByAkTag("aktest")).willReturn(tag);
		given(tagueSurRepository.save(ts)).willReturn(ts);

		assertNotNull(competenceService.ajouterTagueSur(cmp.get().getAkCompetence(), tagSur));
	}

	@Test
	public void getTagsByCompetence() {
		Competence cmp = new Competence("ak_test", "nom", "desc", true, false);
		Tag tag = new Tag("ak_test", "nom", "desc");
		TagueSur ts = new TagueSur(tag, cmp);
		List<TagueSur> allCmp = singletonList(ts);

		given(tagueSurRepository.findByAkCompetence("ak_test")).willReturn(allCmp);

		assertNotNull(competenceService.findByAkCompetence("ak_test"));
	}

	@Test
	public void getCompetencesByTag() {
		Competence cmp = new Competence("ak_test", "nom", "desc", true, false);
		Tag tag = new Tag("ak_test", "nom", "desc");
		TagueSur ts = new TagueSur(tag, cmp);
		List<TagueSur> allCmp = singletonList(ts);

		given(tagueSurRepository.findByAkTag("ak_test")).willReturn(allCmp);

		assertNotNull(competenceService.findCompetencesByAkTag("ak_test"));
	}

	@Test
	public void rechercherParCompetences() {
		List<String> competences = new ArrayList<>();
		competences.add("ak_comp");
		competences.add("ak_comp2");

		List<Collaborateur> collaborateursAttendus = singletonList(new Collaborateur("ak_collab"));
		given(collaborateurRepository.rechercherParCompetences(competences)).willReturn(collaborateursAttendus);

		assertEquals(collaborateursAttendus, competenceService.rechercherParCompetences(competences));
	}

	@Test
	public void supprimerTagueSur() throws NotFoundException {
		Competence cmp = new Competence("ak_test", "nom", "desc", true, false);
		Tag tag = new Tag("ak_test", "nom", "desc");
		TagueSur tagueSur = new TagueSur(tag, cmp);

		given(tagueSurRepository.findByAkTagAndByAkCompetence(cmp.getAkCompetence(), tag.getAkTag())).willReturn(tagueSur);


		assertTrue(competenceService.supprimerRelationTag(tag.getAkTag(), cmp.getAkCompetence()).equals(tagueSur));
		then(tagueSurRepository).should().delete(tagueSur);

	}
	@Test(expected = NotFoundException.class)
	public void supprimerTagueSur_NotFoundExceptionTag() throws NotFoundException {
		Optional<Competence> cmp = Optional.ofNullable(new Competence("ak_test", "nom", "desc", true, false));
		Tag tag = new Tag("ak_test", "nom", "desc");

		//given
		given(tagRepository.findOneByAkTag(tag.getAkTag())).willReturn(null);
		given(competenceRepository.findOneByAkCompetence(cmp.get().getAkCompetence())).willReturn(cmp);

		// when
		competenceService.supprimerRelationTag(tag.getAkTag(), cmp.get().getAkCompetence());

	}
	@Test(expected = NotFoundException.class)
	public void supprimerTagueSur_NotFoundExceptionCompetence() throws NotFoundException {
		Competence cmp = new Competence("ak_test", "nom", "desc", true, false);
		Tag tag = new Tag("ak_test", "nom", "desc");

		//given
		given(tagRepository.findOneByAkTag(tag.getAkTag())).willReturn(tag);
		given(competenceRepository.findOneByAkCompetence(cmp.getAkCompetence())).willReturn(null);

		// when
		competenceService.supprimerRelationTag(tag.getAkTag(), cmp.getAkCompetence());

	}

	@Test(expected = NotFoundException.class)
	public void deleteByAkCompetenceNotFoundException() throws NotFoundException {
		competenceService.deleteByAkCompetence("ak non existante");
	}

	@Test
	public void deleteByAkCompetence() throws NotFoundException {
		Optional<Competence> cmp = Optional.ofNullable(new Competence("ak_test", "nom", "desc", true, false));

		given(competenceRepository.findOneByAkCompetence(cmp.get().getAkCompetence())).willReturn(cmp);

		assertTrue(competenceService.deleteByAkCompetence(cmp.get().getAkCompetence()).equals(cmp.get()));
		then(competenceRepository).should().delete(cmp.get());
	}

	@Test
	public void actualiserStatistique() throws JsonProcessingException {
		//Ne se passe rien pour le défaut
		competenceService.actualiserStatistique("default");

		//Ajout dans le bus le résultat de la statistique		
		Collaborateur collab = new Collaborateur("email@sii.fr");

		Competence cmp1 = new Competence("TEST1","alpha","",false,true);

		List<Competence> listeCompetences = new ArrayList<Competence>();
		listeCompetences.add(cmp1);

		List<CompetentSur> listeRelation = new ArrayList<CompetentSur>();

		listeRelation.add(new CompetentSur(collab,
				cmp1,
				LocalDateTime.now(),5,true));

		given(competenceService.getAllCompetence())
		.willReturn(listeCompetences);

		given(competentSurRepository.findByAKCompetence("TEST1"))
		.willReturn(listeRelation.stream());


		List<DonneeStatistique> list = new ArrayList<DonneeStatistique>();
		DonneeStatistique donnee = new DonneeStatistique(cmp1.getNom(), cmp1.getAkCompetence());
		Map<String, Integer> valeurs = new HashMap<String, Integer>();
		valeurs.put("5", 1);
		donnee.setDonnees(valeurs);
		list.add(donnee);
		Statistique stat = new Statistique("Niveaux sur les compétences", "akNiveauxCompetences", list);
		ObjectMapper mapper = new ObjectMapper();
		String statString = mapper.writeValueAsString(stat);

		competenceService.actualiserStatistique("akNiveauxCompetences");

		then(rabbitTemplate).should().convertAndSend(topicExchange.getName(), "Statistique.enregistrer", statString);
	}


	@Test
	public void getStatistiqueNiveauxCompetences() {
		Collaborateur collab = new Collaborateur("email@sii.fr");
		List<CompetentSur> listeRelation = new ArrayList<CompetentSur>();

		Competence cmp1 = new Competence("TEST1","alpha","",false,true);

		listeRelation.add(new CompetentSur(collab,
				cmp1,
				LocalDateTime.now(),5,true));

		given(competentSurRepository.findByAKCompetence("TEST1"))
		.willReturn(listeRelation.stream());
		Map<String, Integer> mapTest = new HashMap<String,Integer>();
		mapTest.put("5",1);
		assertTrue(competenceService.getStatistiqueNiveauxCompetences("TEST1").equals(mapTest));
	}

	@Test
	public void doitRetournerListeObjectif() throws Exception {
		Objectif objectif1 = new Objectif("aktest", "test", "test_desc", "badge");

		List<Objectif> allobj = singletonList(objectif1);

		given(objectifRepository.findAll()).willReturn(allobj);

		// when
		List<Objectif> result = competenceService.getAllObjectif();

		// then
		then(objectifRepository).should().findAll();
		assertThat(result).isEqualTo(singletonList(objectif1));
	}


	@Test
	public void ajouterObjectifJPG() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);
		String badge = "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";

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "jpg", map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		Objectif result = competenceService.createObjectif(objectifJSON);

		///////tests des résultats attendus/////////
		//renvoi la relation competent Sur crée
		assertTrue(result.getAkObjectif().equals("ak_nom")
				&& result.getBadge().length()>0
				&& result.getDescription().equals("description")
				&& result.getNom().equals("nom"));
		//crée l'objectif
		verify(objectifRepository).save(Mockito.any(Objectif.class));
	}

	@Test
	public void ajouterObjectifJPEG() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);
		String badge = "";

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "jpeg", map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		Objectif result = competenceService.createObjectif(objectifJSON);

		///////tests des résultats attendus/////////
		//renvoi la relation competent Sur crée
		assertTrue(result.getAkObjectif().equals("ak_nom")
				&& result.getBadge().length()>0
				&& result.getDescription().equals("description")
				&& result.getNom().equals("nom"));
		//crée l'objectif
		verify(objectifRepository).save(Mockito.any(Objectif.class));
	}

	@Test
	public void ajouterObjectifPNG() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);
		String badge = "";

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "png", map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		Objectif result = competenceService.createObjectif(objectifJSON);

		///////tests des résultats attendus/////////
		//renvoi la relation competent Sur crée
		assertTrue(result.getAkObjectif().equals("ak_nom")
				&& result.getBadge().length()>0
				&& result.getDescription().equals("description")
				&& result.getNom().equals("nom"));
		//crée l'objectif
		verify(objectifRepository).save(Mockito.any(Objectif.class));
	}

	@Test
	public void ajouterObjectifBadgeNull() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", null, null, map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		Objectif result = competenceService.createObjectif(objectifJSON);

		///////tests des résultats attendus/////////
		//renvoi la relation competent Sur crée
		assertTrue(result.getAkObjectif().equals("ak_nom")
				&& result.getDescription().equals("description")
				&& result.getNom().equals("nom"));
		//crée l'objectif
		verify(objectifRepository).save(Mockito.any(Objectif.class));
	}

	@Test
	public void ajouterObjectifBadgeVide() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", "", null, map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		Objectif result = competenceService.createObjectif(objectifJSON);

		///////tests des résultats attendus/////////
		//renvoi la relation competent Sur crée
		assertTrue(result.getAkObjectif().equals("ak_nom")
				&& result.getDescription().equals("description")
				&& result.getNom().equals("nom"));
		//crée l'objectif
		verify(objectifRepository).save(Mockito.any(Objectif.class));
	}

	@Test(expected = ObjectifExistantException.class)
	public void ajouterObjectifObjectifExistantException() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);
		String badge = "";

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "jpg", map);

		//objectif existant
		Objectif obj = new Objectif("ak_nom", "nom", "description");
		given(objectifRepository.findOneByAkObjectif("ak_nom")).willReturn(Optional.ofNullable(obj));

		competenceService.createObjectif(objectifJSON);
	}

	@Test(expected = ObjectifJSONException.class)
	public void ajouterObjectifObjectifJSONExceptionCompInconu() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 4);
		map.put("comp2", 4);
		String badge = "";
		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "jpg", map);

		competenceService.createObjectif(objectifJSON);
	}


	@Test(expected = ObjectifJSONException.class)
	public void ajouterObjectifObjectifJSONExceptionNotationTropFaible() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 0);
		map.put("comp2", 4);
		String badge = "";

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "jpg", map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		competenceService.createObjectif(objectifJSON);
	}

	@Test(expected = ObjectifJSONException.class)
	public void ajouterObjectifObjectifJSONExceptionNotationTropHaute() throws Exception{
		Map<String, Integer> map = new HashMap<String, Integer>();
		map.put("comp1", 100);
		map.put("comp2", 4);
		String badge = "";

		ObjectifJSON objectifJSON = new ObjectifJSON("nom", "description", badge, "jpg", map);

		Optional<Competence> comp1 = Optional.ofNullable(new Competence("comp1","comp1","",false,true));
		Optional<Competence> comp2 = Optional.ofNullable(new Competence("comp2","comp2","",false,true));

		//competence existante
		given(competenceRepository.findOneByAkCompetence("comp1")).willReturn(comp1);
		given(competenceRepository.findOneByAkCompetence("comp2")).willReturn(comp2);

		competenceService.createObjectif(objectifJSON);
	}

	@Test
	public void findByAkObjectif() throws NotFoundException {
		Objectif objectif = new Objectif("akObjectif", "test", "test_desc", "badge");

		given(objectifRepository.findOneByAkObjectif("akObjectif")).willReturn(Optional.of(objectif));

		Objectif result = competenceService.findByAkObjectif("akObjectif");
		assertTrue(result.equals(objectif));
	}

	@Test (expected = NotFoundException.class)
	public void findByAkObjectifNotFoundException() throws NotFoundException {
		competenceService.findByAkObjectif("akObjectif");
	}

	@Test
	public void findByAkObjectifRelation() throws NotFoundException {
		int notation = 4;
		ObjectifDoitEtreEvalue objectifDoitEtreEvalue = new ObjectifDoitEtreEvalue("akObjectif", Long.valueOf(notation), "akComp");

		Objectif objectif = new Objectif("akObjectif", "test", "test_desc", "badge");

		given(doitEtreEvalueRepository.findByAkObjectif("akObjectif")).willReturn(singletonList(objectifDoitEtreEvalue));
		given(objectifRepository.findOneByAkObjectif("akObjectif")).willReturn(Optional.of(objectif));

		List<ObjectifDoitEtreEvalue> result = competenceService.findByAkObjectifRelation("akObjectif");

		assertTrue(result.equals(singletonList(objectifDoitEtreEvalue)));
	}

	@Test (expected = NotFoundException.class)
	public void findByAkObjectifRelationNotFoundException() throws NotFoundException {
		int notation = 4;
		ObjectifDoitEtreEvalue objectifDoitEtreEvalue = new ObjectifDoitEtreEvalue("akObjectif", Long.valueOf(notation), "akComp");


		given(doitEtreEvalueRepository.findByAkObjectif("akObjectif")).willReturn(singletonList(objectifDoitEtreEvalue));

		competenceService.findByAkObjectifRelation("akObjectif");

	}

	@Test
	public void AjoutObjectifsCollaborateur() throws NotFoundException {
		Objectif objectif = new Objectif("akObjectif", "test", "test_desc", "badge");

		given(objectifRepository.findOneByAkObjectif("akObjectif")).willReturn(Optional.of(objectif));
		given(aAtteindreRepository.findOneByAkCollaborateurAndByAkObjectif("akCollaborateur", "akObjectif")).willReturn(Optional.ofNullable(null));

		List<String> result = this.competenceService.ajoutObjectifsCollaborateur("akCollaborateur",singletonList("akObjectif"));
		assertTrue(result.size()==1 && result.contains("akObjectif"));
	}

	@Test
	public void AjoutObjectifsCollaborateurAAtteindreNotNull() throws NotFoundException {
		Objectif objectif = new Objectif("akObjectif", "test", "test_desc", "badge");

		given(objectifRepository.findOneByAkObjectif("akObjectif")).willReturn(Optional.of(objectif));

		AAtteindre aAtteindre = new AAtteindre();
		given(aAtteindreRepository.findOneByAkCollaborateurAndByAkObjectif("akCollaborateur", "akObjectif")).willReturn(Optional.of(aAtteindre));

		List<String> result = this.competenceService.ajoutObjectifsCollaborateur("akCollaborateur",singletonList("akObjectif"));
		assertTrue(result.size()==1 && result.contains("akObjectif"));
	}


	@Test(expected = NotFoundException.class)
	public void AjoutObjectifsCollaborateurNotFoundException() throws NotFoundException {
		given(aAtteindreRepository.findOneByAkCollaborateurAndByAkObjectif("akCollaborateur", "akObjectif")).willReturn(Optional.ofNullable(null));

		this.competenceService.ajoutObjectifsCollaborateur("akCollaborateur",singletonList("akObjectif"));
	}

	@Test
	public void findObjectifsByAkCollaborateurValideTrue() {
		ObjectifRetourJSON objectifRetourJSON = new ObjectifRetourJSON("ak_testfsdfsd", "testfsdfsd", "gfdgdfg", null, true);
		List<ObjectifRetourJSON> list = singletonList(objectifRetourJSON);

		given(aAtteindreRepository.findByAkCollaborateur("akCollaborateur", true)).willReturn(list);
		assertTrue(this.competenceService.findObjectifsByAkCollaborateurValide("akCollaborateur", true).size()==1);
	}	

	@Test
	public void findObjectifsByAkCollaborateurValideFalse() {
		ObjectifRetourJSON objectifRetourJSON = new ObjectifRetourJSON("ak_testfsdfsd", "testfsdfsd", "gfdgdfg", null, false);
		List<ObjectifRetourJSON> list = singletonList(objectifRetourJSON);

		given(aAtteindreRepository.findByAkCollaborateur("akCollaborateur", false)).willReturn(list);
		assertTrue(this.competenceService.findObjectifsByAkCollaborateurValide("akCollaborateur", false).size()==1);
	}

	@Test
	public void findObjectifsByAkCollaborateur() {
		ObjectifRetourJSON objectifRetourJSON1 = new ObjectifRetourJSON("ak_testfsdfsd", "testfsdfsd", "gfdgdfg", null, true);
		ObjectifRetourJSON objectifRetourJSON2 = new ObjectifRetourJSON("ak_testfsdfsd", "testfsdfsd", "gfdgdfg", null, false);
		List<ObjectifRetourJSON> list = new ArrayList<ObjectifRetourJSON>();
		list.add(objectifRetourJSON1);
		list.add(objectifRetourJSON2);

		given(aAtteindreRepository.findByAkCollaborateur("akCollaborateur", true)).willReturn(list);
		assertTrue(this.competenceService.findObjectifsByAkCollaborateurValide("akCollaborateur", true).size()==2);
	}

	@Test
	public void creationInteretPour() throws DefautException {
		Collaborateur collab = new Collaborateur("ak_collab");
		Competence comp = new Competence("ak_comp", "comp", "desc", true, true);
		MentionInteretPour i = new MentionInteretPour(collab, comp, 1);

		given(mentionInteretPourRepository.save(i)).willReturn(i);
		given(collaborateurRepository.findOneByAkCollaborateur("ak_collab")).willReturn(Optional.ofNullable(collab));
		given(competenceRepository.findOneByAkCompetence("ak_comp")).willReturn(Optional.ofNullable(comp));
		given(mentionInteretPourRepository.findAkCollaborateurAndAkCompetence("ak_collab", "ak_comp")).willReturn(new ArrayList<MentionInteretPour>());

		MentionInteretPour result = competenceService.creerInteretCompetence("ak_collab", "ak_comp", i);

		verify(mentionInteretPourRepository).save(Mockito.any(MentionInteretPour.class));
	}

	@Test
	public void modificationInteretPour() throws DefautException {
		Collaborateur collab = new Collaborateur("ak_collab");
		Competence comp = new Competence("ak_comp", "comp", "desc", true, true);
		MentionInteretPour i = new MentionInteretPour(collab, comp, 1);

		ArrayList<MentionInteretPour> l = new ArrayList<MentionInteretPour>();
		l.add(i);

		given(mentionInteretPourRepository.save(i)).willReturn(i);

		given(collaborateurRepository.findOneByAkCollaborateur("ak_collab")).willReturn(Optional.ofNullable(collab));
		given(competenceRepository.findOneByAkCompetence("ak_comp")).willReturn(Optional.ofNullable(comp));

		given(mentionInteretPourRepository.findAkCollaborateurAndAkCompetence("ak_collab", "ak_comp")).willReturn(l);

		MentionInteretPour result = competenceService.modifierInteretCompetence("ak_collab", "ak_comp", i);

		assertEquals(i.getCollaborateur(), result.getCollaborateur());

		verify(mentionInteretPourRepository).save(Mockito.any(MentionInteretPour.class));
	}

	@Test
	public void getInteretPour() {
		Collaborateur collab = new Collaborateur("ak_collab");
		Competence comp = new Competence("ak_comp", "comp", "desc", true, true);
		
		MentionInteretPour i = new MentionInteretPour(collab, comp, 1);

		ArrayList<MentionInteretPour> l = new ArrayList<MentionInteretPour>();
		l.add(i);

		given(mentionInteretPourRepository.findAkCollaborateurAndAkCompetence("ak_collab", "ak_comp")).willReturn(l);

		int result = competenceService.findInteretCompetence("ak_collab", "ak_comp");

		assertEquals(1, result);
	}
	
	
	@Test
	public void creationApprendrePour() throws DefautException {
		Collaborateur collab = new Collaborateur("ak_collab");
		Competence comp = new Competence("ak_comp", "comp", "desc", true, true);
		MentionApprendreSur i = new MentionApprendreSur(collab, comp, 1);

		given(mentionApprendreSurRepository.save(i)).willReturn(i);
		given(collaborateurRepository.findOneByAkCollaborateur("ak_collab")).willReturn(Optional.ofNullable(collab));
		given(competenceRepository.findOneByAkCompetence("ak_comp")).willReturn(Optional.ofNullable(comp));
		given(mentionApprendreSurRepository.findAkCollaborateurAndAkCompetence("ak_collab", "ak_comp")).willReturn(new ArrayList<MentionApprendreSur>());

		MentionApprendreSur result = competenceService.creerApprendreCompetence("ak_collab", "ak_comp", i);

		verify(mentionApprendreSurRepository).save(Mockito.any(MentionApprendreSur.class));
	}

	@Test
	public void modificationApprendrePour() throws DefautException {
		Collaborateur collab = new Collaborateur("ak_collab");
		Competence comp = new Competence("ak_comp", "comp", "desc", true, true);
		MentionApprendreSur i = new MentionApprendreSur(collab, comp, 1);

		ArrayList<MentionApprendreSur> l = new ArrayList<MentionApprendreSur>();
		l.add(i);

		given(mentionApprendreSurRepository.save(i)).willReturn(i);

		given(collaborateurRepository.findOneByAkCollaborateur("ak_collab")).willReturn(Optional.ofNullable(collab));
		given(competenceRepository.findOneByAkCompetence("ak_comp")).willReturn(Optional.ofNullable(comp));

		given(mentionApprendreSurRepository.findAkCollaborateurAndAkCompetence("ak_collab", "ak_comp")).willReturn(l);

		MentionApprendreSur result = competenceService.modifierApprendreCompetence("ak_collab", "ak_comp", i);

		assertEquals(i.getCollaborateur(), result.getCollaborateur());

		verify(mentionApprendreSurRepository).save(Mockito.any(MentionApprendreSur.class));
	}

	@Test
	public void getApprendrePour() {
		Collaborateur collab = new Collaborateur("ak_collab");
		Competence comp = new Competence("ak_comp", "comp", "desc", true, true);
		
		MentionApprendreSur i = new MentionApprendreSur(collab, comp, 1);

		ArrayList<MentionApprendreSur> l = new ArrayList<MentionApprendreSur>();
		
		l.add(i);

		given(mentionApprendreSurRepository.findAkCollaborateurAndAkCompetence("ak_collab", "ak_comp")).willReturn(l);

		int result = competenceService.findApprendreCompetence("ak_collab", "ak_comp");

		assertEquals(1, result);
	}
}
